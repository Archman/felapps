Example 1 
=========

``imageviewer`` -- Image figure DAQ app.

Start DAQ
---------

If it is the first time to start ``imageviewer``, windows may be poped up to ask for the
configuration file [#f1]_. After loading the configuration file, the GUI style, e.g.
background colour, font could be tunned, as well as other options, e.g. the data/image 
format that to be saved, the DAQ rate, image data source, EPICS control configurations, etc.

.. image:: ../../images/imageviewer_01.png
    :width: 500px

Some basic operations:
    
    * Put the EPICS PV string name in the ``Image Source:`` box, press ENTER to retrieve
      the data (1D array), the ``+``/``-`` button is used to add/remove input PV string
      name to/from the internal favorite PV name array;
    * Change the color map style of the obtained image, from ``Color Map:`` control field,
      select the grouped style from the combo list, add/remove current style to ``Favorites``
      group;
    * Reverse the color map, and change the color range, all these color options are of the
      goal to discriminate the interested signal from the big picture, i.e. to increase 
      visibility;
    * To the figure plot region, there are operations:
        * Place up to two (2) markers with selected color;
        * Track the ``(x, y)`` coordinate when mouse is moving;
        * Show the figure intensity and Gaussian fit indicated radius sizes in x and y;
    * Choose and reset Region-of-Interest, i.e. ROI.

Other operations that could be reached through menu:
    * Save figure as some formated image [#f2]_, shortcut: ``CTRL+S``;
    * Save figure as some formated data, shortcut: ``CTRL+D``;
    * Quit app: shortcut: ``CTRL+W`` [#f3]_;
    * Save configurations: ``SHIFT+CTRL+S``, load configurations: ``SHIFT+CTRL+L``;
    * Show profile along x-axis: ``ALT+X``;
    * Show profile along y-axis: ``ALT+Y``;
    * Show intensity monitor window: ``SHIFT+CTRL+V``, the figure could also be saved;
    * Save fetched image data automatically: ``ALT+S`` [#f4]_;


The following image is captured when ``imageviewer`` successfully fetch image data from
PV named ``sxfel:prof1`` [#f5]_, which is a ``50 x 50`` array after reshaping operation, push
``START`` will trig the DAQ procedure with the configured rate ``Preferences > Control > 
Monitor Frequency`` [#f6]_.

.. image:: ../../images/imageviewer_02.png
    :width: 500px

Presently, ``imageviewer`` has been integrated Gaussian fitting model to show the x/y
profiles of the image, click the pop up button right aside of ``... Gaussian ...`` in the
``Curve Fitting`` panel of the main window, e.g. the following image shows the profiles.

.. image:: ../../images/imageviewer_04.png
    :width: 500px

The raw data and fitting data could be saved by ``Export`` button.

.. note:: Gaussian fitting model should be frequently used in the searching for 
    radius size, central position of the light/beam spot, if other models should 
    be applied, the ``imageviewer`` app needs to be extended.

.. warning:: Attention should be paid to the following configuration items:

      1. ``Image Width`` and ``Image Height``, which is the dimension (2D array) to reshape;
      2. ``CA Library Path``, ``CA Max Array Bytes`` and ``Auto CA Address``, which is the 
         control specific parameters, proper tunning is required so as to fetch the image data
         from soft-IOC.

Auto Save
---------

Here take the ``Auto save`` operation as example. ``Auto save`` is one of the operation modules in
the ``Operations`` menu, future extended operation modules should be inserted into this menu. The
shortcut for ``Auto save`` is ``ALT+S``. ``Auto save`` is designed for the following
scenario:
    * The facility (e.g. FEL) finally has been properly configured;
    * DAQ procedure should be activated to get bundle of data, e.g. for some kind of analysis.

Pop up ``Auto save`` window, in which, tick the interested data and image format to be saved [#f7]_,
as well as the full path to save files and the save frequency and save counter, etc. Push 
``Start SAVE`` to trig the auto save procedure, the saving status could be found in the highlighted
status bar in ``imageviewer`` app.

.. image:: ../../images/imageviewer_03.png
    :width: 500px

.. warning:: When utilizing ``Auto save`` operation, remember ``imageviewer`` should be in
    the DAQ mode, i.e. ``START`` button should be pushed.


Data Example
------------

The data files generated by ``imageviewer`` can be classified into two categories, i.e.
*figure* and *data*, while *figure* could be saved as ``png``, ``jpeg``, ``svg``, ``tiff``,
``ps``, ``eps``, ``pdf``, etc.; *data* could be saved as ``txt`` and ``hdf5``, of which 
only ``hdf5`` could be self-explained, it is recommanded to use ``hdf5``.

``hdf5`` files could be generated in the following scenarios:

1. Image Data
^^^^^^^^^^^^^

Click ``File > Save Image Data``, or by shortcut ``CTRL+D``, raw data of the figure with trivial
properties will be saved into a ``hdf5`` file, by default, the full path filename will be
``save root directory`` + ``<folder name like '20160830'>`` + ``save filename head`` + 
``<time stamp (hour,min,sec) like '100607'>`` [#f8]_.

Any ``hdf5`` file could be opened by a program that distributed by HDF5 official group, named
``hdfview`` [#f9]_. Also, in the CLI, command ``h5ls`` could be used for inspection, below are
the illustrations for the two approaches:

.. image:: ../../images/imageviewer_05.png
    :width: 500px

.. image:: ../../images/imageviewer_06.png
    :width: 500px

2. Curve Fitting Data
^^^^^^^^^^^^^^^^^^^^^

When curve fitting is enabled, in the pop up fitting panel, ``Export`` button will generate
the ``hdf5`` data, saving path should be informed through the pop up dialog. Use ``h5ls`` to
inspect the exported file:

.. code-block:: bash

    $ h5ls -lvr fitdata104332.hdf5 
    Opened "fitdata104332.hdf5" with sec2 driver.
    /                        Group
        Location:  1:96
        Links:     1
    /data                    Group
        Attribute: timestamp scalar
            Type:      variable-length null-terminated ASCII string
            Data:  "2016-08-30 10:43:32 CST"
        Location:  1:800
        Links:     1
    /data/fit                Group
        Attribute: x0 scalar
            Type:      native double
            Data:  26.041
        Attribute: xstd scalar
            Type:      native double
            Data:  6.99682
        Attribute: y0 scalar
            Type:      native double
            Data:  26.041
        Attribute: ystd scalar
            Type:      native double
            Data:  6.99682
        Location:  1:10608
        Links:     1
    /data/fit/x              Dataset {200/200}
        Location:  1:14432
        Links:     1
        Storage:   1600 logical bytes, 1600 allocated bytes, 100.00% utilization
        Type:      native double
    /data/fit/xdata          Dataset {200/200}
        Location:  1:14976
        Links:     1
        Storage:   1600 logical bytes, 1600 allocated bytes, 100.00% utilization
        Type:      native double
    /data/fit/y              Dataset {200/200}
        Location:  1:11624
        Links:     1
        Storage:   1600 logical bytes, 1600 allocated bytes, 100.00% utilization
        Type:      native double
    /data/fit/ydata          Dataset {200/200}
        Location:  1:14704
        Links:     1
        Storage:   1600 logical bytes, 1600 allocated bytes, 100.00% utilization
        Type:      native double
    /data/raw                Group
        Location:  1:1960
        Links:     1
    /data/raw/x              Dataset {50/50}
        Location:  1:7712
        Links:     1
        Storage:   400 logical bytes, 400 allocated bytes, 100.00% utilization
        Type:      native long
    /data/raw/xdata          Dataset {50/50}
        Location:  1:10336
        Links:     1
        Storage:   400 logical bytes, 400 allocated bytes, 100.00% utilization
        Type:      native double
    /data/raw/y              Dataset {50/50}
        Location:  1:6240
        Links:     1
        Storage:   400 logical bytes, 400 allocated bytes, 100.00% utilization
        Type:      native long
    /data/raw/ydata          Dataset {50/50}
        Location:  1:7984
        Links:     1
        Storage:   400 logical bytes, 400 allocated bytes, 100.00% utilization
        Type:      native double

The grouped data set: ``raw`` and ``fit``, other metadata like ``timestamp``, 
central point coordinate (``x0``, ``y0``), radius size (``xstd``, ``ystd``) could
be retrieved according to the string names.

3. Auto Saved Data
^^^^^^^^^^^^^^^^^^

Data generated by ``Auto save`` operation could be ``hdf5`` (recommanded the exclusive choice),
is similar as ``Image Data``, besides ``timestamp`` property, 
but with only one property: ``app``, which value is ``imageviewer``,
indicating that the file is generated by app named ``imageviewer``.
These ``hdf5`` data files could be imported into ``dataworkshop`` for post-processing, 
see :ref:`dataworkshop_ex`.

.. only:: html

    .. rubric:: Footnotes:

.. [#f1] Configuration file that ``imageviewer`` requires is a ``.xml`` formated file,
    a sample file could be downloaded :download:`here <../../snippets/imageviewer.xml>`. 
.. [#f2] The default image format could be set from menu: ``Configurations > Preferences
    > Image Name Extension`` or ``SHIFT+CTRL+I`` to open ``Preferences`` window, same rule
    applies to save figure data.
.. [#f3] ``CTRL+W`` is a common shortcut to close the app for all apps in ``felapps``.
.. [#f4] Auto saved data files could be used as the input data files of app: ``dataworkshop``,
    which serves as a simple data post-processor.
.. [#f5] ``sxfel:prof1`` is a waveform record of an soft-IOC that is used to simulate the 
    EPICS control environment.
.. [#f6] It is suggested that increasing this value gradually, e.g. by step of 0.5, e.g.
    ``1 Hz`` for large image, and ``5 Hz`` for small image.
.. [#f7] Since saving data, especially ``hdf5`` is always more efficient that saving other
    format, it is suggested that only tick ``hdf5`` options when cares more about efficient,
    especially for image with large pixles.
.. [#f8] All these meta information could be set and get in the ``Preferences > Image`` panel.
.. [#f9] `https://www.hdfgroup.org/products/java/hdfview/ <https://www.hdfgroup.org/products/java/hdfview/>`_
